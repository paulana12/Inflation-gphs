View(Agregado_nuew)
duplicates(Agregado)
duplicate(Adgregado)
duplicated(Adgregado)
duplicate(Agregado)
library(haven)
library(expss)
library(maditr)
GEIH_2020<- read_dta("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE/GEIH 2020 IOF3I.dta")
names(GEIH_2020)
#Queremos averiguar a nivel de qué está la base: personas y hogares/
library(readxl)
library(readr)
library(dplyr)
library(foreign)
library(psych)
library(plyr)
library(tidyr)
library(dplyr)
library(plyr)
library(tidyverse)
length(unique(GEIH_2020$directorio))
anyDuplicated(GEIH_2020$directorio)
anyDuplicated(GEIH_2020$directorio GEIH_2020$secuencia_p )
names(GEIH_2020)
length(unique(GEIH_2020$directorio))
anyDuplicated(GEIH_2020$directorio)
anyDuplicated(GEIH_2020$directorio GEIH_2020$secuencia_p)
unique(GEIH_2020$directorio,  GEIH_2020$secuencia_p)
anyDuplicated(GEIH_2020$directorio,  GEIH_2020$secuencia_p)
length(unique(GEIH_2020$directorio))
anyDuplicated(GEIH_2020$directorio)
anyDuplicated(GEIH_2020$directorio,  GEIH_2020$secuencia_p)
DT <- data.table(A = rep(1:3, each=4), B = rep(1:4, each=3),
C = rep(1:2, 6), key = "A,B")
DT
duplicated(DT)
unique(DT)
DT
anyDuplicated(GEIH_2020$directorio)
anyDuplicated(GEIH_2020$directorio,  GEIH_2020$secuencia_p)
anyDuplicated(GEIH_2020$secuencia_p)
library(haven)
library(expss)
library(maditr)
GEIH_2020<- read_dta("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE/GEIH 2020 IOF3I.dta")
names(GEIH_2020)
anyDuplicated(GEIH_2020$secuencia_p)
length(unique(GEIH_2020$secuencia_p))
anyDuplicated(GEIH_2020$directorio)
anyDuplicated(GEIH_2020$directorio,  GEIH_2020$secuencia_p)
anyDuplicated(GEIH_2020$secuencia_p)
gasolina<-read.table("precio_gasolina.csv", header = T, sep = ",",
comment.char = "", stringsAsFactors = F)
dup_se1<- data.frame(table(GEIH_2020$secuencia_p))
dup_se2<- data.frame(table(dup_se1$Freq))
write_xlsx(dup_se1,"C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE\\freq2.xlsx")
#El siguiente código muestra cuanto fue el monto pagado por cada transferencia cada mes
Agregado<- aggregate(cbind(GEIH_2020$pago_FA, GEIH_2020$pago_JA, GEIH_2020$pago_CM, GEIH_2020$pago_IS, GEIH_2020$pago_FAIVA, GEIH_2020$pago_CMIVA, GEIH_2020$pago_OtrasAyudas) ~GEIH_2020$mes, data=GEIH_2020, FUN="sum")
colnames(Agregado)<-c("Mes", "Pago_FA" , "Pago_JA", "Pago_CM", "Pago_IS", "Pago_FAIVA", "Pago_CMIVA", "Pago_Otras ayudas")
write_xlsx(Agregado,"C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE\\agre.xlsx")
#El siguiente código muestra el número de personas que reportan que al menos un miembro de su familia recibe cada uno de las transferencias al mes
Agregado1<- aggregate(cbind(GEIH_2020$marcador_FA, GEIH_2020$marcador_JA, GEIH_2020$marcador_CM, GEIH_2020$marcador_IS, GEIH_2020$pago_FAIVA, GEIH_2020$marcador_CMIVA, GEIH_2020$marcador_OtrasAyudas) ~GEIH_2020$mes, data=GEIH_2020, FUN="sum")
colnames(Agregado1)<-c("Mes", "Marcador_FA" , "Marcador_JA", "Marcador_CM", "Marcador_IS", "Marcador_FAIVA", "Marcador_CMIVA", "Marcador_Otras ayudas")
write_xlsx(Agregado1,"C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE\\agre1.xlsx")
#Ahora sé que solamente se necesitan las variables de AÑO, MES, DIRECTORIO Y SECUENCIA P para crear la variable de hogar.
Agregado<- aggregate(cbind(GEIH_2020$pago_FA, GEIH_2020$pago_JA, GEIH_2020$pago_CM, GEIH_2020$pago_IS, GEIH_2020$pago_FAIVA, GEIH_2020$pago_CMIVA, GEIH_2020$pago_OtrasAyudas) ~GEIH_2020$mes, ~GEIH_2020$directorio,  data=GEIH_2020, FUN=max())
GEIH_2020$group_id <- paste(GEIH_2020$mes, GEIH_2020$directorio, GEIH_2020$secuencia_p, sep = "-")
GEIH_2020_2 <- subset(GEIH_2020, select = -c(mes, directorio, secuencia_p))
Agregado_nuew<- aggregate(cbind(GEIH_2020$pago_FA, GEIH_2020$pago_JA, GEIH_2020$pago_CM, GEIH_2020$pago_IS, GEIH_2020$pago_FAIVA, GEIH_2020$pago_CMIVA, GEIH_2020$pago_OtrasAyudas) ~GEIH_2020$group_id, data=GEIH_2020, FUN="max")
rm(list=ls())
graphics.off()
#install.packages("expss")
#install.packages("maditr")
#install.packages("memisc")
library(haven)
library(expss)
library(maditr)
GEIH_2020<- read_dta("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE/GEIH 2020 IOF3I.dta")
names(GEIH_2020)
#Queremos averiguar a nivel de qué está la base: personas y hogares/
library(readxl)
library(readr)
library(dplyr)
library(foreign)
library(psych)
library(plyr)
library(tidyr)
library(dplyr)
library(plyr)
library(tidyverse)
anyDuplicated(GEIH_2020$directorio)
anyDuplicated(GEIH_2020$directorio,  GEIH_2020$secuencia_p)
anyDuplicated(GEIH_2020$secuencia_p)
dup_vi1<- data.frame(table(GEIH_2020$directorio))
dup_vi2<- data.frame(table(dup_vi1$Freq))
library("writexl")
write_xlsx(dup_vi2,"C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE\\freq1.xlsx")
dup_se1<- data.frame(table(GEIH_2020$secuencia_p))
dup_se2<- data.frame(table(dup_se1$Freq))
write_xlsx(dup_se1,"C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE\\freq2.xlsx")
#El siguiente código muestra cuanto fue el monto pagado por cada transferencia cada mes
Agregado<- aggregate(cbind(GEIH_2020$pago_FA, GEIH_2020$pago_JA, GEIH_2020$pago_CM, GEIH_2020$pago_IS, GEIH_2020$pago_FAIVA, GEIH_2020$pago_CMIVA, GEIH_2020$pago_OtrasAyudas) ~GEIH_2020$mes, data=GEIH_2020, FUN="sum")
colnames(Agregado)<-c("Mes", "Pago_FA" , "Pago_JA", "Pago_CM", "Pago_IS", "Pago_FAIVA", "Pago_CMIVA", "Pago_Otras ayudas")
write_xlsx(Agregado,"C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE\\agre.xlsx")
#El siguiente código muestra el número de personas que reportan que al menos un miembro de su familia recibe cada uno de las transferencias al mes
Agregado1<- aggregate(cbind(GEIH_2020$marcador_FA, GEIH_2020$marcador_JA, GEIH_2020$marcador_CM, GEIH_2020$marcador_IS, GEIH_2020$pago_FAIVA, GEIH_2020$marcador_CMIVA, GEIH_2020$marcador_OtrasAyudas) ~GEIH_2020$mes, data=GEIH_2020, FUN="sum")
colnames(Agregado1)<-c("Mes", "Marcador_FA" , "Marcador_JA", "Marcador_CM", "Marcador_IS", "Marcador_FAIVA", "Marcador_CMIVA", "Marcador_Otras ayudas")
write_xlsx(Agregado1,"C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE\\agre1.xlsx")
#Ahora sé que solamente se necesitan las variables de AÑO, MES, DIRECTORIO Y SECUENCIA P para crear la variable de hogar.
Agregado<- aggregate(cbind(GEIH_2020$pago_FA, GEIH_2020$pago_JA, GEIH_2020$pago_CM, GEIH_2020$pago_IS, GEIH_2020$pago_FAIVA, GEIH_2020$pago_CMIVA, GEIH_2020$pago_OtrasAyudas) ~GEIH_2020$mes, ~GEIH_2020$directorio,  data=GEIH_2020, FUN=max())
GEIH_2020$group_id <- paste(GEIH_2020$mes, GEIH_2020$directorio, GEIH_2020$secuencia_p, sep = "-")
GEIH_2020_2 <- subset(GEIH_2020, select = -c(mes, directorio, secuencia_p))
Agregado_nuew<- aggregate(cbind(GEIH_2020$pago_FA, GEIH_2020$pago_JA, GEIH_2020$pago_CM, GEIH_2020$pago_IS, GEIH_2020$pago_FAIVA, GEIH_2020$pago_CMIVA, GEIH_2020$pago_OtrasAyudas) ~GEIH_2020$group_id, data=GEIH_2020, FUN="max")
length(unique(GEIH_2020))
length(unique(GEIH_2020$directorio))
length(unique(GEIH_2020$directorio))
length(unique(GEIH_2020$secuencia_p))
length(unique(GEIH_2020$secuencia_p GEIH_2020$directorio ))
length(unique(GEIH_2020$secuencia_p, GEIH_2020$directorio ))
length(unique(GEIH_2020$secuencia_p, GEIH_2020$directorio ))
rm(list=ls())
graphics.off()
library(haven)
library(expss)
library(maditr)
GEIH_2020<- read_dta("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE/GEIH 2020 IOF3I.dta")
names(GEIH_2020)
library(haven)
library(expss)
library(maditr)
GEIH_2020<- read_dta("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE/GEIH 2020 IOF3I.dta")
names(GEIH_2020)
GEIH_2020_sd<-GEIH_2020[!duplocated(GEIH_2020)]
GEIH_2020_sd<-GEIH_2020[!duplicated(GEIH_2020)]
GEIH_2020_sd<-GEIH_2020[!duplicated(GEIH_2020), ]
View(GEIH_2020_sd)
A = matrix(  c(1, 2, 3, 4, 5, 6, 7, 8, 9),   nrow = 3,  ncol = 3,    byrow = TRUE)
A
A = matrix(  c(1, 4, 5, 2, 5, 7, 1, 3, 6, 7,2,7 ),   nrow = 4,  ncol = 3,    byrow = TRUE)
A
df= matrix(  c(1, 4, 5, 2, 5, 7, 1, 3, 6, 7,2,7 ),   nrow = 4,  ncol = 3,    byrow = TRUE)
A
colnames(df) = c("X", "Y", "Z")
colnames(df) = c("X", "Y", "Z")
A
View(df)
df2 <- df
df2$dup <- c(duplicated(df2$X, fromLast = TRUE)  | duplicated(df2$X))
df$dup <- ave(df$X, df$X, FUN = length) > 1L;
dt <- fread("X    Y    Z
1    4    5
2    5    7
1    3    6
7    2    7")
dt[, dup := .N > 1, by = X]
dt
dt[, dup := .N > 1, by = X Y ]
dt[, dup := .N > 1, by = X, Y ]
rm(list=ls())
graphics.off()
GEIH_2020<- read_dta("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/RRAA DANE/GEIH 2020 IOF3I.dta")
names(GEIH_2020)
GEIH_2020_dt<-data.table(GEIH_2020)
View(GEIH_2020_dt)
View(GEIH_2020)
View(GEIH_2020_dt)
df <- data_frame(ric = c('S1A.PA', 'ABC.PA', 'EFG.PA', 'S1A.PA', 'ABC.PA', 'EFG.PA'),
df <- data_frame(ric = c('S1A.PA', 'ABC.PA', 'EFG.PA', 'S1A.PA', 'ABC.PA', 'EFG.PA'),
date = c('2011-06-30 20:00:00', '2011-07-03 20:00:00', '2011-07-04 20:00:00', '2011-07-05 20:00:00', '2011-07-03 20:00:00', '2011-07-04 20:00:00'),
open = c(23.7, 24.31, 24.495, 24.23, 24.31, 24.495))
df <- data_frame(ric = c('S1A.PA', 'ABC.PA', 'EFG.PA', 'S1A.PA', 'ABC.PA', 'EFG.PA'),
date = c('2011-06-30 20:00:00', '2011-07-03 20:00:00', '2011-07-04 20:00:00', '2011-07-05 20:00:00', '2011-07-03 20:00:00', '2011-07-04 20:00:00'),
open = c(23.7, 24.31, 24.495, 24.23, 24.31, 24.495))
df <- data_frame(ric = c('S1A.PA', 'ABC.PA', 'EFG.PA', 'S1A.PA', 'ABC.PA', 'EFG.PA'),
date = c('2011-06-30 20:00:00', '2011-07-03 20:00:00', '2011-07-04 20:00:00', '2011-07-05 20:00:00', '2011-07-03 20:00:00', '2011-07-04 20:00:00'),
open = c(23.7, 24.31, 24.495, 24.23, 24.31, 24.495))
library(dplyr)
df <- data_frame(ric = c('S1A.PA', 'ABC.PA', 'EFG.PA', 'S1A.PA', 'ABC.PA', 'EFG.PA'),
df <- data_frame(ric = c('S1A.PA', 'ABC.PA', 'EFG.PA', 'S1A.PA', 'ABC.PA', 'EFG.PA'),
date = c('2011-06-30 20:00:00', '2011-07-03 20:00:00', '2011-07-04 20:00:00', '2011-07-05 20:00:00', '2011-07-03 20:00:00', '2011-07-04 20:00:00'),
open = c(23.7, 24.31, 24.495, 24.23, 24.31, 24.495))
artists <- read_csv('artists.csv')
library(dplyr)
library(nycflights13)
airlines
airplanes
flights
glimpse(flights)
rm(list=ls())
graphics.off()
library(dplyr)
library(nycflights13)
flights
glimpse(flights)
flights<- flights
filter(flights, month ==1, day=1)
filter(flights, month ==1, day==1)
enero1<-filter(flights, month ==1, day==1)
nrow(enero1)
nrow(flights)
filter(flights, month ==12, day==25)
dic25filter(flights, month ==12, day==25)
dic25filter<-(flights, month ==12, day==25)
dic25filter<-(flights, month ==12, day==25)
dic25<- filter(flights, month ==12, day==25)
nrows(dic25)
nrow(dic25)
dic25
#Conectores lógicos, < > & |
fliter(flights, month==11 | month==12)
#Conectores lógicos, < > & |
filter(flights, month==11 | month==12)
filter(flights, month %n% c(11,12))
filter(flights, month %in% c(11,12))
filter(flights, month %in% 11:12)
names(flighta)
names(flights)
filter(flights, dep_delay+arr_delay >=120)
filter(flights, dep_delay+arr_delay >=180)
filter(flights, arr_delay>120 | dep_delay==120)
filter(flights, arr_delay>120 | dep_delay>120)
filter(flights, !(arr_delay>120 | dep_delay>120))
#Para ver faltantes NA: is.na
x<-c(1,2, NA, 4,5)
is.na(x)
sum(is.na(x)
sum(is.na(x))
sum(is.na(x))
is.na(x)
sum(is.na(x))
lapply(flight, function(x)(sum(is.na(x)))
lapply(flight, function(x){sum(is.na(x))})
lapply(flights, function(x){sum(is.na(x))})
NA>5
10==NA
NA==NA
df<-tibble(x=c(1, NA, 3))
df
filter(df, x>1)
#Nos saco los NA. Tener cuidado.
#Para que incluya los NA
filter(df, isn.na(x)| x>1)
#Nos saco los NA. Tener cuidado.
#Para que incluya los NA
filter(df, is.na(x)| x>1)
#Quiero saber a cuantos estados a volado
unique(flights$dest)
lenght(unique(flights$dest))
length(unique(flights$dest))
filter(flights, dest %in% c("IAH", "HOu"))
filter(flights, dest %in% c("IAH", "HOU"))
filter(flights, airtime>=30 & airtime<=60)
filter(flights, air_time>=30 & air_time<=60)
filter(fligths, between(air_time, 30, 60))
filter(fligths, between(air_time, 30, 60))
filter(flights, between(air_time, 30, 60))
arrange(flights, year, month, day)
arrange(flights, dep_time)
arrange(flights, dep_time)
#que lo ordene descendentemente
arrange(flights, desc(dep_time))
#¿Qué pasa con los NA?
df
#¿Qué pasa con los NA?
df<- tibble(x=c(5,2, NA))
arrange(df, x)
arrange(df, desc(x))
arrange(flights, desc(distance / air_time))
select(flight, year, month, day )
select(flights, year, month, day )
#Devuelve una tabla con las columasn
select(flights, dep_time:arr_time)
select(flights, year:day)
select(flights, -(year:day))
#Quiero sacar columnas que empiecen por
select(flights, start.with("dep_"))
#Quiero sacar columnas que empiecen por
select(flights, starts.with("dep_"))
#Quiero sacar columnas que empiecen por
select(flights, starts_with("dep_"))
select(flights, contains("dep"))
select(flights, ends_with("delay"))
?select
select(flights, air_time, distance)
select(flights, air_time, distance, everythin())
select(flights, air_time, distance, everything())
flights_sml <- select(flights,
year:day
ends_with("delay"),
distance,
air_time)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time)
mutate(flights_sml, velocidad=distance/air:time )
mutate(flights_sml, velocidad=distance/air_time )
mutate(flights_sml,
velocidad=distance/air_time
ganancia=dep_delay-arr_delay)
mutate(flights_sml,
velocidad=distance/air_time
ganancia=dep_delay - arr_delay)
mutate(flights_sml,
velocidad=distance/air_time,
ganancia=dep_delay - arr_delay)
mutate(flights_sml,
velocidad=distance/air_time,
ganancia=dep_delay - arr_delay,
ganancia_por_hora=ganancia/60)
#Si solamente queremos las columnas nuevas, usamos transmutate
trnasmutate(flights_sml,
velocidad=distance/air_time,
ganancia=dep_delay - arr_delay,
ganancia_por_hora=ganancia/60)
#Si solamente queremos las columnas nuevas, usamos transmutate
transmutate(flights_sml,
velocidad=distance/air_time,
ganancia=dep_delay - arr_delay,
ganancia_por_hora=ganancia/60)
#Si solamente queremos las columnas nuevas, usamos transmutate
transmute(flights_sml,
velocidad=distance/air_time,
ganancia=dep_delay - arr_delay,
ganancia_por_hora=ganancia/60)
x<-1:10
(x<-1:10)
lag(x)
lead(x)
cumsum(x)
cummean(x)
meanrank(x)
x<- c(1,2,2,NA,3,4)
min_rank(x)
min_rank(x)
library(dplyr)
library(nycflights13)
flights
glimpse(flights)
flights<- flights
library(dplyr)
library(nycflights13)
flights
glimpse(flights)
flights<- flights
#En qué posición en el ranking está la variable
x<- c(1,2,2,NA,3,4)
min_rank(x)
x<- c(10,20,20,NA,30,40)
min_rank(x)
x<- c(10,30,30,NA,20,40)
min_rank(x)
max_rank(x)
row_number(x)
summarise(flights, delay=mean(dep_delay, na.rm=TRUE))
#Siempre va acompañada de group_by
by_day<- group_by(flights, year, month, day)
by_day
summarise(by_day, delay=mean(dep_delay, na.rm=TRUE))
by_month<- group_by(flights, year, month)
by_day
summarise(by_month, delay=mean(dep_delay, na.rm=TRUE))
flights %>%
filter(month==1)
flights %>%
filter(month==1) %>%
group_by(year,month,day) %>%
summarise(delay==mean(dep_delay, na.rm=TRUE))
flights %>%
filter(month==1) %>%
group_by(year,month,day) %>%
summarise(delay=mean(dep_delay, na.rm=TRUE))
flights
flights %>%
group_by(dest) %>%
summarise(count=n(),
dist=mean(distance, na.rm=TRUE),
delay=mean(arr_delay, na.rm=TRUE))
flights %>%
group_by(dest) %>%
summarise(count=n(),  #Para el destino cuenta cuantas filas diferentes hay en el grupo
dist=mean(distance, na.rm=TRUE),
delay=mean(arr_delay, na.rm=TRUE)) %>%
filter(count>20, dest!="NAL")
flights %>%
group_by(dest) %>%
summarise(count=n(),  #Para el destino cuenta cuantas filas diferentes hay en el grupo
dist=mean(distance, na.rm=TRUE),
delay=mean(arr_delay, na.rm=TRUE)) %>%
filter(count>20, dest!="NAL") %>% View()
library(plyr)
library(readr)
library(stringr)
library(readxl)
library(dplyr)
library(tidyr)
library(plyr)
library("writexl")
#install.packages("purrr")
library(purrr)
rm(list=ls())
graphics.off()
setwd("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/Inflacion/2018")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Diciembre", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiemmbre")
VMensual<- ldply(myfiles, read_excel, sheet = "Anexo4", range = "A8:K33")
View(VMensual)
setwd("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/Inflacion/2018")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Diciembre", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiemmbre")
VAC<- ldply(myfiles, read_excel, sheet = "Anexo5", range = "A8:K33")
View(VAC)
setwd("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/Inflacion/2018")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiembre")
NIngresos<- ldply(myfiles, read_excel, sheet = "Anexo3", range = "A9:P34")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiembre")
NIngresos<- ldply(myfiles, read_excel, sheet = "Anexo3", range = "A9:P34")
View(NIngresos)
NIngresos<-rename(NIngresos, Tot_men="Mensual...2")
NIngresos<-rename(NIngresos, Tot_año="Año corrido...3")
NIngresos<-rename(NIngresos, Tot_anu="Doce meses...4")
NIngresos<-rename(NIngresos, Tot_men="Mensual...2")
rm(list=ls())
graphics.off()
library(plyr)
library(readr)
library(stringr)
library(readxl)
library(dplyr)
library(tidyr)
library(plyr)
library("writexl")
#install.packages("purrr")
library(purrr)
setwd("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/Inflacion/2018")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiembre")
NIngresos<- ldply(myfiles, read_excel, sheet = "Anexo3", range = "A9:P34")
NIngresos<-rename(NIngresos, Tot_men="Mensual...2")
NIngresos<-rename(NIngresos, Tot_men="Mensual...2")
colnames(NIngreso)<-c(".id", "oden" , "Tot_men", "Tot_año", "Tot_anu", "Ing_men", "Ing_año","Ing_anu", "Ime_men", "Ime_año", "Ime_anu", "Ial_men", "Ial_año", "Ial_anu")
colnames(NIngresos)<-c(".id", "oden" , "Tot_men", "Tot_año", "Tot_anu", "Ing_men", "Ing_año","Ing_anu", "Ime_men", "Ime_año", "Ime_anu", "Ial_men", "Ial_año", "Ial_anu")
rm(list=ls())
setwd("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/Inflacion/2018")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiembre")
NIngresos<- ldply(myfiles, read_excel, sheet = "Anexo3", range = "A9:P34")
View(NIngresos)
NIngresos<-NIngresos[,-(6,10, 14)]
NIngresos<-NIngresos[-c(6,10, 14)]
colnames(NIngresos)<-c(".id", "oden" , "Tot_men", "Tot_año", "Tot_anu", "Ing_men", "Ing_año","Ing_anu", "Ime_men", "Ime_año", "Ime_anu", "Ial_men", "Ial_año", "Ial_anu")
setwd("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/Inflacion/2018")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiembre")
NIngresos<- ldply(myfiles, read_excel, sheet = "Anexo3", range = "A9:P34")
#ING es para ingresos BAJOS
#IME es para ingresos MEDIOS
#IAL es para ingresos ALTOS
Data <- Data[,-(2:3),drop=FALSE]
NIngresos<-NIngresos[-c(6,10, 14)]
NIngresos %>%
filter(NIngresos, "Año corrido...3"==NA)
colnames(NIngresos)<-c(".id", "oden" , "Tot_men", "Tot_año", "Tot_anu", "Ing_men", "Ing_año","Ing_anu", "Ime_men", "Ime_año", "Ime_anu", "Ial_men", "Ial_año", "Ial_anu", "NA1", "NA2", "NA3", "NA4", "SemTot", "SemING", "SEMIME", "SEMIAL")
rm(list=ls())
graphics.off()
library(plyr)
library(readr)
library(stringr)
library(readxl)
library(dplyr)
library(tidyr)
library(plyr)
library("writexl")
#install.packages("purrr")
library(purrr)
setwd("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/Inflacion/2018")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiembre")
NIngresos<- ldply(myfiles, read_excel, sheet = "Anexo3", range = "A9:P34")
View(NIngresos)
colnames(NIngresos)<-c(".id", "oden" , "Tot_men", "Tot_año", "Tot_anu", "Ing_men", "Ing_año","Ing_anu", "Ime_men", "Ime_año", "Ime_anu", "Ial_men", "Ial_año", "Ial_anu", "NA1", "NA2", "NA3", "NA4", "SemTot", "SemING", "SEMIME", "SEMIAL", "PTTot", "PTING", "PTIME", "PTIAL")
rm(list=ls())
graphics.off()
library(plyr)
library(readr)
library(stringr)
library(readxl)
library(dplyr)
library(tidyr)
library(plyr)
library("writexl")
#install.packages("purrr")
library(purrr)
setwd("C:/Users/Paula Neira/OneDrive - Departamento Administrativo para la Prosperidad Social DPS/Inflacion/2018")
myfiles<- list.files(pattern=NULL, full.names=TRUE)
myfiles <-as.list(myfiles)
names(myfiles) <- c("Abril", "Agosto", "Enero", "Febrero", "Julio", "Junio", "Marzo", "Mayo", "Noviembre", "Octubre", "Septiembre")
NIngresos<- ldply(myfiles, read_excel, sheet = "Anexo3", range = "A9:P34")
NIngresos<-NIngresos[-c(6,10, 14)]
colnames(NIngresos)<-c(".id", "oden" , "Tot_men", "Tot_año", "Tot_anu", "Ing_men", "Ing_año","Ing_anu", "Ime_men", "Ime_año", "Ime_anu", "Ial_men", "Ial_año", "Ial_anu", "NA1", "NA2", "NA3", "NA4", "SemTot", "SemING", "SEMIME", "SEMIAL", "PTTot", "PTING", "PTIME", "PTIAL")
